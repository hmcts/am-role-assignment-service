plugins {
  id 'idea'
  id 'application'
  id 'uk.gov.hmcts.java' version '0.12.65'
  id 'pmd'
  id 'jacoco'
  id 'io.spring.dependency-management' version '1.1.7'
  id 'org.springframework.boot' version '3.3.7'
  id 'info.solidsoft.pitest' version '1.15.0'
  id 'com.github.ben-manes.versions' version '0.51.0' //do not update this version from 0.41.0
  id 'org.sonarqube' version '6.0.1.5171'
  id 'com.github.spacialcircumstances.gradle-cucumber-reporting' version '0.1.25'
  id 'au.com.dius.pact' version '4.6.16' //do not change this version or serenity reports will fail to generate
  id 'org.flywaydb.flyway' version '9.22.3'
  id 'org.owasp.dependencycheck' version '12.0.0'
  id 'net.serenity-bdd.serenity-gradle-plugin' version '4.2.16'
}

ext['snakeyaml.version'] = '2.0'

ext {
  springCloudVersion = '2023.0.5'
}

def versions = [
  junit           : '5.11.3',
  junitPlatform   : '1.11.3',
  lombok          : '1.18.36',
  reformLogging   : '6.1.7',
  reformS2sClient : '5.3.0',
  serenity        : '4.2.15',
  pact_version    : '4.1.7',
  rest_assured    : '5.5.0',
  cucumber        : '7.20.1',
  feign_jackson   : '13.5',
  jacksondata     : '2.18.2',
  drools          : '10.0.0',
  poi             : '5.4.0'
]

mainClassName = 'uk.gov.hmcts.reform.roleassignment.RoleAssignmentApplication'
def jarName = 'am-role-assignment-service.jar'

pmd {
  toolVersion = '6.54.0'
  sourceSets = []
}

group = 'uk.gov.hmcts.reform.roleassignment'
version = '0.0.1'

tasks.withType(JavaExec).configureEach {
  javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

jacocoTestCoverageVerification {
  violationRules {
    rule {
      limit {
        counter = 'LINE'
        value = 'COVEREDRATIO'
        minimum = 0.0
      }
    }
  }
}

configurations {
  functionalTestCompile.extendsFrom testCompile
  functionalTestRuntime.extendsFrom testRuntime
  cucumberRuntime.extendsFrom(functionalRuntime)
  contractTestCompile.extendsFrom testCompile
  contractTestRuntime.extendsFrom testRuntime
  pactTestCompile.extendsFrom testCompile
  pactTestRuntime.extendsFrom testRuntime
}

sourceSets {
  functionalTest {
    java {
      compileClasspath += main.output + test.output
      runtimeClasspath += main.output + test.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  integrationTest {
    java {
      compileClasspath += main.output + test.output
      runtimeClasspath += main.output + test.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }

  smokeTest {
    java {
      compileClasspath += main.output + test.output
      runtimeClasspath += main.output + test.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
  }

  contractTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/contractTest/java')
    }
    resources.srcDir file('src/contractTest/resources')
  }
  pactTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/pactTest/java')
    }
    resources.srcDir file('src/pactTest/resources')
  }
}

idea {
    module {
        // config to allow Intelij to mark test source and resource files correctly to help linting tools
        testSources.from(java.sourceSets.functionalTest.java.srcDirs)
        testSources.from(java.sourceSets.integrationTest.java.srcDirs)
        testSources.from(java.sourceSets.smokeTest.java.srcDirs)
        testSources.from(java.sourceSets.contractTest.java.srcDirs)
        testResources.from(java.sourceSets.functionalTest.resources.srcDirs)
        testResources.from(java.sourceSets.integrationTest.resources.srcDirs)
        testResources.from(java.sourceSets.smokeTest.resources.srcDirs)
        testResources.from(java.sourceSets.contractTest.resources.srcDirs)
    }
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

def tags = (findProperty('tags') == null) ? 'not @Ignore' : '(' + findProperty('tags') + ') and not @Ignore'

task functional(type: JavaExec) {
  description = "Runs the functional tests"
  group = "Verification"
  generateCucumberReports.enabled = false
  main("uk.gov.hmcts.reform.roleassignment.befta.RoleAssignmentBeftaMain")
  classpath += configurations.cucumberRuntime + sourceSets.functionalTest.runtimeClasspath + sourceSets.main.output + sourceSets.test.output
  args = [
    '--threads', '1',
    '--plugin', "json:${rootDir}/target/cucumber.json",
    '--plugin', "junit:${buildDir}/test-results/functional/cucumber.xml",
    '--tags',"${tags}",
    '--glue', 'uk.gov.hmcts.befta.player',
    'src/functionalTest/resources/features'
  ]
  // '--add-opens=...' added to suppress 'WARNING: An illegal reflective access operation has occurred' in uk.gov.hmcts.befta.util.CucumberStepAnnotationUtils
  jvmArgs '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED'

  finalizedBy {
    generateCucumberReports.enabled = true
    generateCucumberReports {
      doLast{
        def functionalReportsFolder = "${rootDir}/target/cucumber/functional-html-reports/"
        delete functionalReportsFolder
        new File(functionalReportsFolder).mkdirs()
        file("${rootDir}/target/cucumber/cucumber-html-reports").renameTo(file(functionalReportsFolder))
        logger.quiet("Functional test report moved to ---> file://$functionalReportsFolder/overview-features.html")
      }
    }
  }

  outputs.upToDateWhen { false }
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  mustRunAfter test
  finalizedBy aggregate
}
check.dependsOn integration

task smoke(type: Test, description: 'Runs the smoke tests.', group: 'Verification') {
  description = 'Runs Smoke Tests'
  useJUnitPlatform()
  testClassesDirs = sourceSets.smokeTest.output.classesDirs
  classpath = sourceSets.smokeTest.runtimeClasspath
  finalizedBy aggregate
}

project.ext {
  if (System.env.GIT_COMMIT) {
    // DTSAM-379 canIDeploy Index 0 out of bounds for length 0 Issue
    pacticipantVersion = System.env.GIT_COMMIT.substring(0,9)
  } else {
    // DTSAM-382 GIT_COMMIT null in local build fix
    pacticipantVersion = getCheckedOutGitCommitHash()
  }
}

static def getCheckedOutGitCommitHash() {
  'git rev-parse --verify --short HEAD'.execute().text.trim()
}

task contract(type: Test) {
  description = 'Runs the consumer Pact tests'
  useJUnitPlatform()
  testClassesDirs = sourceSets.contractTest.output.classesDirs
  classpath = sourceSets.contractTest.runtimeClasspath
  include "uk/gov/hmcts/reform/roleassignment/**"
}

task runProviderPactVerification(type: Test) {
  useJUnitPlatform()
  logger.lifecycle("Runs provider pact Tests")
  testClassesDirs = sourceSets.contractTest.output.classesDirs
  classpath = sourceSets.contractTest.runtimeClasspath
  if (project.hasProperty('pact.verifier.publishResults')) {
    systemProperty 'pact.verifier.publishResults', project.property('pact.verifier.publishResults')
  }
  systemProperty 'pact.provider.version', project.pacticipantVersion
}

task fortifyScan(type: JavaExec)  {
  main("uk.gov.hmcts.fortifyclient.FortifyClientMainApp")
  classpath += sourceSets.test.runtimeClasspath
  jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
  // The line below prevents the build from failing if the Fortify scan detects issues
  ignoreExitValue = true as JavaExecSpec
}

runProviderPactVerification.dependsOn contract

runProviderPactVerification.finalizedBy pactVerify

jacocoTestReport {
  executionData(test)
  reports {
    xml.required = true
    csv.required = false
    xml.outputLocation = file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

flyway {
  url = System.getenv('FLYWAY_URL')
  user = System.getenv('FLYWAY_USER')
  password = System.getenv('FLYWAY_PASSWORD')
  baselineOnMigrate = true
  baselineVersion = '000'
}

task migratePostgresDatabase(type: org.flywaydb.gradle.task.FlywayMigrateTask) {
    baselineOnMigrate = true
    outOfOrder = true
    if (project.hasProperty("dburl")) {
      url = "jdbc:postgresql://${dburl}"
    }
}

jacoco {
  toolVersion = "0.8.11"
}

pitest {
  pitestVersion = versions.pitest
  targetClasses = ['uk.gov.hmcts.reform.*']
  excludedClasses = ['uk.gov.hmcts.reform.roleassignment.RoleAssignmentApplication',
                     'uk.gov.hmcts.reform.roleassignment.config.*',
                     'uk.gov.hmcts.reform.roleassignment.util.Swagger2SpringBoot',
                     'uk.gov.hmcts.reform.roleassignment.util.JacksonUtils',
                     'uk.gov.hmcts.reform.roleassignment.domain.model.MutableHttpServletRequest',
                     'uk.gov.hmcts.reform.roleassignment.domain.model.RoleConfig',
                     'uk.gov.hmcts.reform.roleassignment.domain.model.enums.*',
                     'uk.gov.hmcts.reform.roleassignment.auditlog.AuditOperationType',
                     'uk.gov.hmcts.reform.roleassignment.data.*',
                     'uk.gov.hmcts.reform.roleassignment.feignclients.configuration.DataStoreApiFallback',

  ]
  excludedMethods = ['getListOfRoles', 'removeCorrelationLog', 'getExitCode', 'validateDateTime', 'requestInterceptor']
  threads = 15
  outputFormats = ['XML', 'HTML']
  timestampedReports = true
  mutationThreshold = 60
}


test {
  jacoco{
    excludes = ['org/drools/**/*']
  }
  generateCucumberReports.enabled = false
  useJUnitPlatform()
  failFast = true
}


sonarqube {
  properties {
    property "sonar.projectName", "am-role-assignment-service"
    property "sonar.projectKey", "am-role-assignment-service"
    property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    property "sonar.exclusions", "build/generated-sources/**/*.java," +
      "**/SecurityConfiguration.java," +
      "**/SwaggerConfiguration.java," +
      "**/MutableHttpServletRequest.java," +
      "src/main/java/uk/gov/hmcts/reform/roleassignment/*Application.java," +
      "src/main/java/uk/gov/hmcts/reform/roleassignment/config/**," +
      "src/main/java/uk/gov/hmcts/reform/roleassignment/data/**," +
      "src/main/java/uk/gov/hmcts/reform/roleassignment/domain/service/common/PageHolder.java," +
      "src/main/java/uk/gov/hmcts/reform/roleassignment/domain/model/**," +
      "src/main/java/uk/gov/hmcts/reform/roleassignment/util/JacksonUtils.java," +
      "src/main/java/uk/gov/hmcts/reform/roleassignment/feignclients/configuration/DataStoreApiFallback.java"
    property "sonar.pitest.mode", "reuseReport"
    property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    property "sonar.junit.repoGetAssignmentControllerrtPaths", "${project.buildDir}/test-results/junit-platform"
  }
}

project.tasks['sonarqube'].dependsOn test, integration, jacocoTestReport
project.tasks['sonarqube'].group = "Verification"

dependencyUpdates.resolutionStrategy {
  componentSelection { rules ->
    rules.all {
      def isNonStable = { String version ->
        ['alpha', 'beta', 'rc', 'cr', 'm', 'preview', 'b', 'ea'].any { qualifier ->
          version ==~ /(?i).*[.-]\$qualifier[.\\d-+]*/
        }
      }
      if (isNonStable(candidate.version) && !isNonStable(currentVersion)) {
        selection.reject('Release candidate')
      }
    }
  }
}

//https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  suppressionFile = 'config/owasp/suppressions.xml'
}

dependencyUpdates.resolutionStrategy = {
  componentSelection { rules ->
    rules.all { ComponentSelection selection ->
      boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
        selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
      }
      if (rejected) {
        selection.reject('Release candidate')
      }
    }
  }
}

repositories {
  mavenLocal()
  mavenCentral()
  maven {
        url 'https://pkgs.dev.azure.com/hmcts/Artifacts/_packaging/hmcts-lib/maven/v1'
  }
  maven {
    url 'https://jitpack.io'
  }
}

dependencies {
  implementation(group: 'org.springframework.boot', name:'spring-boot-starter-web')
  implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa')
  implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-actuator')
  implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-aop')
  implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-json' )
  //Added for Spring Security Implementation
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-client'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-resource-server'

  implementation group: 'org.springframework.security', name: 'spring-security-core'
  implementation group: 'org.springframework.security', name:'spring-security-web'
  implementation group: 'org.springframework.security', name:'spring-security-config'
  implementation group: 'org.springframework.security', name:'spring-security-crypto'
  implementation group: 'org.springframework.security', name:'spring-security-oauth2-client'
  implementation group: 'org.springframework.security', name:'spring-security-oauth2-core'
  implementation group: 'org.springframework.security', name:'spring-security-oauth2-jose'
  implementation group: 'org.springframework.security', name:'spring-security-oauth2-resource-server'
  implementation group: 'org.springframework.retry', name: 'spring-retry', version: '2.0.11'
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: '2.2.10.RELEASE'
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap'
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign'
  implementation group: 'org.apache.poi', name: 'poi', version: versions.poi
  implementation group: 'org.apache.poi', name: 'poi-ooxml', version: versions.poi
  implementation group: 'org.apache.poi', name: 'poi-scratchpad', version: versions.poi

  implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.6.0'

  // drools engine dependency
  implementation group: 'org.drools', name: 'drools-core', version: versions.drools
  implementation group: 'org.drools', name: 'drools-compiler', version: versions.drools
  implementation group: 'org.drools', name: 'drools-xml-support', version: versions.drools
  implementation group: 'org.drools', name: 'drools-decisiontables', version: versions.drools
  implementation(group: 'org.kie', name: 'kie-ci', version: versions.drools) {
    exclude group: 'org.jsoup', module: 'jsoup'
    exclude group: 'org.apache.ant', module: 'ant'
    exclude group: 'org.apache.ant', module: 'ant-launcher'
    exclude group: 'org.glassfish', module: 'jakarta.el'
    exclude group: 'jakarta.el', module: 'jakarta.el-api'
    exclude group: 'com.google.protobuf', module: 'protobuf-java'
  }
  //Dependent on drools Jar. Can be removed CVE-2021-26291
  implementation group: 'org.apache.maven', name: 'maven-core', version: '3.8.7'
  implementation group: 'org.flywaydb', name: 'flyway-core', version: '8.5.13'
  implementation group: 'com.google.guava', name: 'guava', version: '33.4.0-jre'
  implementation group: 'jakarta.inject', name: 'jakarta.inject-api', version: '2.0.1'
  implementation group: 'jakarta.el', name: 'jakarta.el-api', version: '6.0.1'
  implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.12.0'
  implementation group: 'org.hibernate.orm', name: 'hibernate-core', version: '6.6.5.Final'
  implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '3.2.0'
  implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.5'
  implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
  implementation group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '10.0.1'
  implementation group: 'com.auth0', name: 'java-jwt', version: '4.4.0'
  implementation group: 'commons-io', name:'commons-io', version: '2.18.0'
  implementation group: 'org.apache.commons', name: 'commons-compress', version: '1.27.1'
  implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.10.1'
  implementation group: 'org.json', name: 'json', version: '20250107'
  implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.5'

  implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: versions.reformLogging
  implementation group: 'com.github.hmcts', name: 'idam-java-client', version: '2.1.1'
  //Added for S2S and User Authentication
  implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: versions.reformS2sClient
  implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jacksondata
  implementation group: 'com.fasterxml.jackson', name: 'jackson-bom', version: versions.jacksondata, ext: 'pom'
  implementation group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.21'

  implementation group: 'com.microsoft.azure', name: 'applicationinsights-spring-boot-starter', version: '2.6.4'

  testImplementation('com.opentable.components:otj-pg-embedded:1.1.0')
  testImplementation group: 'org.wiremock', name: 'wiremock', version: '3.10.0'
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-contract-wiremock'
  testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.15.2'
  testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
  testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.junit
  testImplementation group: 'org.junit.platform', name: 'junit-platform-commons', version: versions.junitPlatform
  testRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-engine', version: versions.junitPlatform
  testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit

  testImplementation 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'
  testImplementation group: 'org.springframework.security', name: 'spring-security-test'
  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', {
    exclude group: 'junit', module: 'junit'
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }
  testImplementation(group: 'io.cucumber', name: 'cucumber-java', version: versions.cucumber) {
    exclude group: 'javascript', module: 'jquery'
  }
  testImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.rest_assured
  testImplementation group: 'io.cucumber', name: 'cucumber-junit', version: versions.cucumber
  testImplementation group: 'io.github.openfeign', name: 'feign-jackson', version: versions.feign_jackson
  implementation group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '6.1.0'
  testImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
  testImplementation group: 'net.serenity-bdd', name: 'serenity-junit5', version: versions.serenity
  testImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
  testImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
  testImplementation 'com.github.hmcts:befta-fw:9.0.2'
  testImplementation 'com.github.hmcts:fortify-client:1.4.8:all'
  testImplementation group: 'io.projectreactor', name: 'reactor-core', version: '3.7.4'

  smokeTestImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
  smokeTestImplementation group: 'net.serenity-bdd', name: 'serenity-junit5', version: versions.serenity
  smokeTestImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
  smokeTestImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
  smokeTestImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.rest_assured
  smokeTestImplementation group: 'commons-io', name: 'commons-io', version: '2.18.0'

  // AM-467-Serenity report for Integration test
  integrationTestImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
  integrationTestImplementation group: 'net.serenity-bdd', name: 'serenity-junit5', version: versions.serenity
  integrationTestImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
  integrationTestImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
  integrationTestImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.rest_assured

  integrationTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  integrationTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  implementation group: 'org.pitest', name: 'pitest-junit5-plugin', version: '1.2.2'

  implementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  testImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  // Lombok for smokeTest
  smokeTestImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  smokeTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  // Lombok for integrationTest
  integrationTestImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  integrationTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  contractTestImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  contractTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  functionalTestImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  functionalTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  pactTestImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  pactTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  contractTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
  contractTestRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit
  contractTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.junit
  contractTestImplementation group: 'org.junit.platform', name: 'junit-platform-commons', version: versions.junitPlatform
  contractTestRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-engine', version: versions.junitPlatform

  contractTestImplementation group: 'au.com.dius.pact.provider', name: 'junit5', version: versions.pact_version
  contractTestImplementation group: 'au.com.dius.pact.provider', name: 'spring', version: versions.pact_version
  contractTestImplementation group: 'au.com.dius.pact.provider', name: 'junit5spring', version: versions.pact_version

  smokeTestImplementation sourceSets.main.runtimeClasspath
  smokeTestImplementation sourceSets.test.runtimeClasspath

  integrationTestImplementation sourceSets.main.runtimeClasspath
  integrationTestImplementation sourceSets.test.runtimeClasspath

  functionalTestImplementation sourceSets.main.runtimeClasspath
  functionalTestImplementation sourceSets.test.runtimeClasspath

  contractTestImplementation sourceSets.main.runtimeClasspath
  contractTestImplementation sourceSets.test.runtimeClasspath

  pactTestImplementation sourceSets.main.runtimeClasspath
  pactTestImplementation sourceSets.test.runtimeClasspath
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.boot:spring-boot-dependencies:3.3.7"
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
  dependencies {
    dependencySet(group: 'net.minidev', version: '2.5.2') {
      entry 'json-smart'
    }
    dependencySet(group: 'com.fasterxml.jackson.core', version: versions.jacksondata) {
      entry 'jackson-databind'
      entry 'jackson-core'
      entry 'jackson-annotations'
    }
  }
}

bootJar {
  archiveFileName = jarName

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}

configurations.all {
  exclude group: "org.glassfish", module: "jakarta.el"
  exclude group: "io.github.x-stream", module: "mxparser"
  exclude group: 'io.netty', module: 'netty-tcnative-classes'
}

cucumberReports {
  outputDir = file("${projectDir}/target/cucumber")
  reports = files("${projectDir}/target/cucumber.json")
  notFailingStatuses = ["skipped","passed"]
}

// Gradle 7.x issue, workaround from: https://github.com/gradle/gradle/issues/17236#issuecomment-894768083
rootProject.tasks.named("processSmokeTestResources") {
  duplicatesStrategy = 'include'
}

rootProject.tasks.named("processFunctionalTestResources") {
  duplicatesStrategy = 'include'
}

rootProject.tasks.named("processIntegrationTestResources") {
  duplicatesStrategy = 'include'
}
