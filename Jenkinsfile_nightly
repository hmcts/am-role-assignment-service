#!groovy

properties([
  // H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
  pipelineTriggers([cron('21 01 * * *')]),
  parameters([
    string(name: 'URL_TO_TEST', defaultValue: 'http://am-role-assignment-service-aat.service.core-compute-aat.internal', description: 'The URL you want to run these tests against'),
    string(name: 'SecurityRules',
      defaultValue: 'http://raw.githubusercontent.com/hmcts/security-test-rules/master/conf/security-rules.conf',
      description: 'The URL you want to run these tests against'),
  ])
])

@Library("Infrastructure")

def type = "java"
def product = "am"
def component = "role-assignment-service"

def secrets = [
  'ccd-${env}': [
    secret('ccd-caseworker-autotest-email', 'CCD_CASEWORKER_AUTOTEST_EMAIL'),
    secret('ccd-caseworker-autotest-password', 'CCD_CASEWORKER_AUTOTEST_PASSWORD'),
    secret('ccd-befta-caseworker-2-solicitor-1-pwd', 'CCD_BEFTA_CASEWORKER_2_SOLICITOR_1_PWD'),
    secret('ccd-befta-caseworker-2-solicitor-2-pwd', 'CCD_BEFTA_CASEWORKER_2_SOLICITOR_2_PWD'),
    secret('ccd-befta-caseworker-2-solicitor-3-pwd', 'CCD_BEFTA_CASEWORKER_2_SOLICITOR_3_PWD'),
    secret('ccd-api-gateway-oauth2-client-secret', 'OAUTH2_CLIENT_SECRET')
  ],
  's2s-${env}': [
    secret('microservicekey-am-role-assignment-service', 'BEFTA_S2S_CLIENT_SECRET'),
    secret('microservicekey-am-role-assignment-service', 'S2S_SECRET')
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

def vaultOverrides = [
  'preview' : 'aat',
  'spreview': 'saat'
]

withNightlyPipeline(type, product, component) {
  enableSlackNotifications('#am-role-assignment-service-builds')

  env.IDAM_URL = "https://idam-api.aat.platform.hmcts.net"
  env.TEST_URL = "http://am-role-assignment-service-aat.service.core-compute-aat.internal"
  env.IDAM_S2S_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
  env.S2S_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
  env.CCD_DATA_STORE_URL = "http://ccd-data-store-api-pr-922.service.core-compute-preview.internal"
  env.BEFTA_S2S_CLIENT_ID = "am_role_assignment_service"
  env.DEFINITION_STORE_HOST = "http://ccd-definition-store-api-pr-575.service.core-compute-preview.internal"
  env.OAUTH2_CLIENT_ID = "ccd_gateway"
  env.OAUTH2_REDIRECT_URI = "https://www-ccd.aat.platform.hmcts.net/oauth2redirect"
  env.OAUTH2_ACCESS_TOKEN_TYPE = "OIDC"
  env.BEFTA_RESPONSE_HEADER_CHECK_POLICY = "JUST_WARN"
  env.OAUTH2_SCOPE_VARIABLES = "openid%20profile%20roles%20authorities"
  env.IDAM_CLIENT_ID="am_role_assignment"
  env.OPENID_SCOPE_VARIABLES = "openid+profile+roles+authorities"

  env.Rules = params.SecurityRules

  overrideVaultEnvironments(vaultOverrides)
  loadVaultSecrets(secrets)

  enableMutationTest()
  enableSecurityScan()
  enableFullFunctionalTest()

  before('fullFunctionalTest') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'build/reports/tests/integration/**/*'
  }

  after('fullFunctionalTest') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/target/cucumber/**/*'
  }
}
