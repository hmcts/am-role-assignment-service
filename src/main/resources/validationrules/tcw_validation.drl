package validationrules
import uk.gov.hmcts.reform.roleassignment.domain.model.RoleAssignment;
import uk.gov.hmcts.reform.roleassignment.domain.model.Request;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.Status;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.RequestType;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.GrantType;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.RoleCategory;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.RoleType
import uk.gov.hmcts.reform.roleassignment.domain.model.Pattern;
import com.fasterxml.jackson.databind.JsonNode;
import uk.gov.hmcts.reform.roleassignment.domain.model.ExistingRoleAssignment;
import uk.gov.hmcts.reform.roleassignment.domain.model.Case;


rule "R01_tcw_rule_for_case" salience 100
when

  $request:           Request(requestType == RequestType.CREATE)
                      ExistingRoleAssignment(actorId == $request.getAssignerId())
                      Pattern($data : data)
                      $classificationEntry : JsonNode() from $data["Classification"]
                      $classificationObj : JsonNode() from $classificationEntry
                      $grantTypeEntry : JsonNode() from $data["GrantType"]
                      $grantTypeObj : JsonNode() from $grantTypeEntry
  $roleAssignment:    RoleAssignment(roleName == "tribunal-caseworker",roleType == RoleType.CASE,
                      grantType.toString() == $grantTypeObj.asText(),roleCategory == RoleCategory.STAFF,attributes["caseId"]!=null,$caseId : attributes["caseId"])
                 	     ExistingRoleAssignment(actorId == $roleAssignment.getActorId())
                 	    Case(id!=null,caseTypeId == "ASYLUM",jurisdiction == "IA")

then
    System.out.println("R01_tcw_rule_for_case");
    $roleAssignment.setStatus(Status.APPROVED);
    $roleAssignment.setLog(String.format("Requested role has been approved by the rule : %s ","R01_tcw_rule_for_case"));
    $request.setLog(String.format("Request has been approved by the rule : %s ","R01_tcw_rule_for_case"));
    update($roleAssignment)
end;



 rule "R02_tcw_rule_for_org" salience 95
 when

  $request:          Request(requestType == RequestType.CREATE)
                     Pattern($data : data)
                     $classificationEntry : JsonNode() from $data["Classification"]
                     $classificationObj : JsonNode() from $classificationEntry
                     $grantTypeEntry : JsonNode() from $data["GrantType"]
                     $grantTypeObj : JsonNode() from $grantTypeEntry
  $roleAssignment:   RoleAssignment(roleName == "tribunal-caseworker",roleType == RoleType.ORGANISATION,classification.toString() == $classificationObj.asText(),
                     grantType.toString() == $grantTypeObj.asText(),roleCategory == RoleCategory.STAFF)


 then
   System.out.println("R02_tcw_rule_for_org");
   $roleAssignment.setStatus(Status.APPROVED);
   $roleAssignment.setLog(String.format("Requested role has been approved by the rule : %s ","R02_tcw_rule_for_org"));
   $request.setLog(String.format("Request has been approved by the rule : %s ","R02_tcw_rule_for_org"));
   update($roleAssignment)
 end;


//**** rules for delete ****
rule "R10_tcw_delete_validation_for_case" salience 70
when
    $request  : Request(id!= null,requestType == RequestType.DELETE,status == Status.CREATED)
    ExistingRoleAssignment(actorId == $request.getAuthenticatedUserId()) or ExistingRoleAssignment(actorId == $request.getAssignerId())
    roleAssignment  : RoleAssignment(id!= null,roleName == "tribunal-caseworker",roleType == RoleType.CASE)

then
    $request.setLog(String.format("Request has been approved by rule :R10_tcw_delete_validation "));
    roleAssignment.setLog("Requested Role has been approved for delete by the rule R10_tcw_delete_validation");
    $request.setStatus(Status.REQUEST_VALIDATED);
    roleAssignment.setStatus(Status.APPROVED);
    update(roleAssignment)
end;


rule "R11_tcw_delete_validation_for_org" salience 70
when
    $request  : Request(id!= null,requestType == RequestType.DELETE,status == Status.CREATED)
    roleAssignment  : RoleAssignment(id!= null,roleName == "tribunal-caseworker",roleType == RoleType.ORGANISATION)

then
    $request.setLog(String.format("Request has been approved by rule :R10_tcw_delete_validation "));
    roleAssignment.setLog("Requested Role has been approved for delete by the rule R10_tcw_delete_validation");
    $request.setStatus(Status.REQUEST_VALIDATED);
    roleAssignment.setStatus(Status.APPROVED);
    update(roleAssignment)
end;













