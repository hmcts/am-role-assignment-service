package validationrules
global uk.gov.hmcts.reform.roleassignment.domain.service.common.RetrieveDataService retrieveDataService;
import uk.gov.hmcts.reform.roleassignment.domain.model.RoleAssignment;
import uk.gov.hmcts.reform.roleassignment.domain.model.Request;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.Status;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.RequestType;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.GrantType;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.RoleType
import uk.gov.hmcts.reform.roleassignment.domain.model.Pattern;
import com.fasterxml.jackson.databind.JsonNode;
import uk.gov.hmcts.reform.roleassignment.domain.model.Role
import uk.gov.hmcts.reform.roleassignment.domain.model.Case;


rule "R11_role_validation_for_organization_pattern" salience 65

when
$requestedRole :  RoleAssignment()
                  RoleAssignment($requestedRole.getStatus() == Status.ROLE_VALIDATED)
$request        : Request(requestType == RequestType.CREATE)
                  RoleAssignment(roleType == RoleType.ORGANISATION)
                  Role($patterns : patterns)
                  Pattern($data : data) from $patterns
                  $classificationEntry : JsonNode() from $data["Classification"]
                  $classificationObj : JsonNode() from $classificationEntry
                  RoleAssignment($requestedRole.getClassification().toString() == $classificationObj.asText() )
                  $grantTypeEntry : JsonNode() from $data["GrantType"]
                  $grantTypeObj : JsonNode() from $grantTypeEntry
                  RoleAssignment($requestedRole.getGrantType().toString() == $grantTypeObj.asText() )
                  $roleTypeObj : JsonNode() from $data["RoleType"]
                  RoleAssignment($requestedRole.getRoleType().toString() == $roleTypeObj.asText() )


then
$requestedRole.setStatus(Status.APPROVED);
$request.setLog(String.format("Requested has been approved by rule : R11_role_validation_for_organization_pattern "));
$requestedRole.setLog(String.format("Requested Role has been approved by rule : R11_role_validation_for_organization_pattern "));
end;



rule "R12_role_validation_for_case_pattern" salience 60

when
$roleAssignment :  RoleAssignment()
                   RoleAssignment($roleAssignment.getStatus() == Status.ROLE_VALIDATED)
$request:         Request(requestType == RequestType.CREATE)
                  RoleAssignment(roleType == RoleType.CASE)
                  Role($patterns : patterns)
                  Pattern($data : data) from $patterns
                  $classificationEntry : JsonNode() from $data["Classification"]
                  $classificationObj : JsonNode() from $classificationEntry
                  RoleAssignment($roleAssignment.getClassification().toString() == $classificationObj.asText() )
                  $grantTypeEntry : JsonNode() from $data["GrantType"]
                  $grantTypeObj : JsonNode() from $grantTypeEntry
                  RoleAssignment($roleAssignment.getGrantType().toString() == $grantTypeObj.asText() )
                  $roleTypeObj : JsonNode() from $data["RoleType"]
                  RoleAssignment($roleAssignment.getRoleType().toString() == $roleTypeObj.asText() )
                  RoleAssignment(attributes["caseId"]!=null,$caseId : attributes["caseId"])
                  Case ( id == $caseId.asText() )

then
$roleAssignment.setStatus(Status.APPROVED);
$request.setLog(String.format("Request has been approved by rule : R12_role_validation_for_case_pattern "));
$roleAssignment.setLog(String.format("Requested Role has been approved by rule : R12_role_validation_for_case_pattern "));

end;

rule "R21_assignment_validation_fail" salience 55
when
$roleAssignment  : RoleAssignment()
                   RoleAssignment($roleAssignment.getStatus()!=Status.APPROVED)

then
$roleAssignment.setLog(String.format("Requested Role pattern validation fail by rule R1X_role_validation_for_case_pattern "));
$roleAssignment.setStatus(Status.REJECTED);
end;



