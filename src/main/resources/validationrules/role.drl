package roleassignmentvalidation
import uk.gov.hmcts.reform.roleassignment.domain.model.RequestedRole;
import uk.gov.hmcts.reform.roleassignment.domain.model.Request;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.Status;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.RequestType;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.GrantType;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.RoleType
import uk.gov.hmcts.reform.roleassignment.domain.model.Pattern;
import com.fasterxml.jackson.databind.JsonNode;
import uk.gov.hmcts.reform.roleassignment.domain.model.Role


rule "role  validation for Judge  P1" salience 30

when
$role           : Role()
$requestedRole  : RequestedRole(roleName == $role.getName())
                  Role($patterns : patterns)
                  Pattern($data : data) from $patterns
                  $classificationEntry : JsonNode() from $data["Classification"]
                  $classificationObj : JsonNode() from $classificationEntry
                  RequestedRole($requestedRole.getClassification().toString() == $classificationObj.asText() )
                  $grantTypeEntry : JsonNode() from $data["GrantType"]
                  $grantTypeObj : JsonNode() from $grantTypeEntry
                  RequestedRole($requestedRole.getGrantType().toString() == $grantTypeObj.asText() )
                  $roleTypeObj : JsonNode() from $data["RoleType"]
                  RequestedRole($requestedRole.getRoleType().toString() == $roleTypeObj.asText() )
                  $attributesEntry : JsonNode() from $data["Attributes"]
                  $attributeObj : JsonNode() from $attributesEntry
                  $Obj1 : JsonNode() from $attributeObj
                  RequestedRole(attributes["region"] == $Obj1)



then
$requestedRole.setStatus(Status.APPROVED);
end;


rule "role  validation for Judge P2" salience 25
when
$role           : Role()
$requestedRole  : RequestedRole(roleName == $role.getName())
                  Role($patterns : patterns)
                  Pattern($data : data) from $patterns
                  $classificationEntry : JsonNode() from $data["Classification"]
                  $classificationObj : JsonNode() from $classificationEntry
                  RequestedRole($requestedRole.getClassification().toString() == $classificationObj.asText() )
                  $grantTypeEntry : JsonNode() from $data["GrantType"]
                  $grantTypeObj : JsonNode() from $grantTypeEntry
                  RequestedRole($requestedRole.getGrantType().toString() == $grantTypeObj.asText() )
                  $roleTypeObj : JsonNode() from $data["RoleType"]
                  RequestedRole($requestedRole.getRoleType().toString() == $roleTypeObj.asText() )
                  $attributesEntry : JsonNode() from $data["Attributes"]
                  $attributeObj : JsonNode() from $attributesEntry
                  $Obj1 : JsonNode() from $attributeObj
                  RequestedRole(attributes["caseId"]!=null)


then
$requestedRole.setStatus(Status.APPROVED);

end;



