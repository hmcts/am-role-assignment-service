server:
  port: ${PORT:4096}
info:
  app:
    name: "am role assignment service"
management:
  health:
    db:
      enabled: true
    defaults:
      enabled: true
    diskspace:
      enabled: true
  endpoint:
    health:
      show-details: "always"
      enabled: true
      cache:
        time-to-live: 1s
    # METRICS ENDPOINT CONFIG
    # Enable the metrics endpoint
    metrics:
      enabled: true
      cache:
        time-to-live: 1s
  endpoints:
    health:
      sensitive: false
    web:
      base-path: /
      exposure:
        include: "*"
  server:
    servlet:
      context-path: /

security:
  anonymousPaths:
    - "/"
    - "/health/**"
    - "/loggers/**"
    - "/am/role-assignments/fetchFlagStatus"
    - "/swagger-ui.html"
    - "/swagger-resources/**"
    - "/v2/api-docs"
    - "/webjars/springfox-swagger-ui/**"
    - "/search/**"
    - "/csrf"
    - "/error"
    - "/favicon.ico"

spring:
  application:
    name: Role Assignment Service
  main:
    allow-bean-definition-overriding: true
  jackson:
    default-property-inclusion: NON_NULL
  spring:
    cloud:
      discovery:
        enabled: false
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        order_by.default_null_ordering: ${DEFAULT_NULL_ORDERING:last}
        jdbc:
          batch_size: 10
          order_inserts: true
          order_updates: true
          batch_versioned_data: true
          lob:
            non_contextual_creation: true

  flyway.enabled: ${ENABLE_DB_MIGRATE:true}
  flyway.locations: classpath:db/migration
  datasource:
    url: jdbc:postgresql://${ROLE_ASSIGNMENT_DB_HOST:localhost}:${ROLE_ASSIGNMENT_DB_PORT:5451}/${ROLE_ASSIGNMENT_DB_NAME:role_assignment}${ROLE_ASSIGNMENT_DB_OPTIONS:?stringtype=unspecified&reWriteBatchedInserts=true}
    username: ${ROLE_ASSIGNMENT_DB_USERNAME:am}
    password: ${ROLE_ASSIGNMENT_DB_PASSWORD:am}
    properties:
      charSet: UTFh-8
    hikari:
      maximumPoolSize: ${MAX_POOL_SIZE:10}
      minimumIdle: ${MINIMUM_IDLE:8}
      poolName: AMHikariCP
      maxLifetime: ${MAX_LIFETIME:90000}
      connectionTimeout: ${CONNECTION_TIMEOUT:10000}
      keepAliveTime: ${KEEP_ALIVE_TIME:60000}
  security:
    oauth2:
      client:
        provider:
          oidc:
            issuer-uri: ${OPEN_ID_API_BASE_URI:https://idam-web-public.aat.platform.hmcts.net/o}
        registration:
          oidc:
            client-id: microservicekey-am-role-assignment-service
            client-secret: ${AM_ROLE_ASSIGNMENT_SERVICE_SECRET:AAAAAAAAAAAAAAAA}
  cache:
    type: ${ENABLE_CACHE:}
    cache-names: token, caseId, userToken
    caffeine:
      spec: maximumSize=500,expireAfterWrite=120s
oidc.issuer: ${OIDC_ISSUER_URL:https://forgerock-am.service.core-compute-idam-aat.internal:8443/openam/oauth2/hmcts}

idam:
  s2s-auth:
    # AAAAAAAAAAAAAAAA
    totp_secret: ${AM_ROLE_ASSIGNMENT_SERVICE_SECRET:AAAAAAAAAAAAAAAA}
    microservice: am_role_assignment_service
    url: ${IDAM_S2S_URL:http://localhost:4502}
  s2s-authorised:
    services: ${ROLE_ASSIGNMENT_S2S_AUTHORISED_SERVICES:am_role_assignment_service,am_org_role_mapping_service,xui_webapp,ccd_data,aac_manage_case_assignment}
  api.url: ${IDAM_USER_URL:http://localhost:5000}
  client:
    id: ${ROLE_ASSIGNMENT_IDAM_CLIENT_ID:am_docker}
    secret: ${ROLE_ASSIGNMENT_IDAM_CLIENT_SECRET:am_docker_secret}
    redirect_uri: ${ROLE_ASSIGNMENT_IDAM_REDIRECT_URI:http://localhost:4096/oauth2redirect}
    admin:
      userId: ${ROLE_ASSIGNMENT_IDAM_ADMIN_USERID:}
      secret: ${ROLE_ASSIGNMENT_IDAM_ADMIN_PASSWORD:}
      scope: ${ROLE_ASSIGNMENT_IDAM_ADMIN_SCOPE:openid profile roles authorities}


testS2S:
  api:
    url: "/testS2SAuthorization"

feign:
  client:
    config:
      default:
        connectTimeout: 30000
        readTimeout: 30000
        loggerLevel: BASIC
      datastoreclient:
        url: ${CCD_DATA_STORE_URL:http://localhost:4452}
  hystrix:
    enabled: ${ENABLE_FEIGN_HYSTRIX:true}

swaggerUrl: ${TEST_URL:localhost:4096}
roleAssignmentUrl: ${TEST_URL:http://localhost:4096}
launchdarkly:
  sdk:
    key: ${LD_SDK_KEY:}
    environment: ${LAUNCH_DARKLY_ENV:pr}
    user: am-${LAUNCH_DARKLY_ENV:local}

audit:
  log:
    ignore:
      statues: 404
    enabled: true

roleassignment:
   query:
     size: 20
     sortcolumn: roleName
org :
  request:
    byPassOrgDroolRule: ${BYPASS_ORG_DROOL_RULE:true}

logging.level.uk.gov.hmcts: ${APPLICATION_LOGGING_LEVEL:DEBUG}

dbFeature:
  flags:
    enable: ${DB_FEATURE_FLAG_ENABLE:iac_1_0}
    disable: ${DB_FEATURE_FLAG_DISABLE:iac_1_1}
